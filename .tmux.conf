# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50
bind-key ^V split-window -h -p 50
bind-key s split-window -p 50
bind-key ^S split-window -p 50

# Pane resize in all four directions using vi bindings.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# stupid pane switching because who needs vim splits
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R
bind -n C-\; last-pane

# Select window hotkeys
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Zoom mode
bind -n M-Enter resize-pane -Z

# New window and layout options
# bind -n M-n split-window -h \; select-layout
# bind -n M-N select-layout
# bind -n M-m next-layout
# bind -n M-M previous-layout
# bind-key -n M-/ display-panes \; select-pane -t :.

# Moving around your window
bind [ swap-pane -U
bind ] swap-pane -D

# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-bg colour245
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g window-status-attr bold
set -g window-status-format "#[fg=colour235]#[bg=colour235] #I #W "
set -g window-status-current-format "#[fg=black,bg=colour0,noreverse,bold] #I: #W #F #[fg=colour39,bg=colour234,nobold]⮀"
setw -g window-active-style 'bg=colour8'
setw -g window-style 'bg=colour0'

# Monitor activity of backgrounded windows
setw -g monitor-activity on
setw -g window-status-activity-attr bold,blink

# Mouse mode
set-option -g mouse on
# setw -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on
# 
# setw -g c0-change-interval 50                                                      
# setw -g c0-change-trigger 75  

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding
unbind C-b
set -g prefix C-a
bind Space send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
# unbind l
# bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window

# New windows/pane in $PWD
bind a set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Reorder windows numbers
set-option -g renumber-windows on

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'
